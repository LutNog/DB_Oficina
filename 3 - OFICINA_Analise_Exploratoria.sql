USE OFICINA;

SELECT * FROM RELATORIO;


-- Verificando valores nulos em valor e cor
SELECT * FROM RELATORIO
WHERE (VALOR IS NULL 
OR COR IS NULL);


-- Verificando bairros distintos
SELECT DISTINCT BAIRRO FROM RELATORIO;


-- Verificando o total de peças e valor por cliente
SELECT IDCLIENTE, IDCONSERTO, NOME, PECA, MARCA, SUM(QUANTIDADE) AS TOTAL_PECAS, VALOR  FROM RELATORIO
GROUP BY IDCARRO, PECA;


-- Verificando o total de gastos por conserto e data
SELECT NOME, IDCONSERTO, MARCA, PECA, QUANTIDADE, VALOR, SUM(QUANTIDADE) * VALOR  AS TOTAL, DATA_CHEGADA, DATA_SAIDA FROM RELATORIO
GROUP BY IDCONSERTO
ORDER BY NOME;


-- Verificando a quantidade de peças que foram vendidadas por ano
SELECT PECA, SUM(QUANTIDADE) AS TOTAL_PECAS, YEAR(DATA_SAIDA) AS ANO FROM RELATORIO
WHERE PECA IS NOT NULL
GROUP BY PECA;


-- Verificando a quantidade de peças que foram vendidadas por mês e ano
SELECT PECA, SUM(QUANTIDADE) AS TOTAL_PECAS, DATE_FORMAT(DATA_SAIDA, '%b %Y') AS MES_ANO FROM RELATORIO
WHERE PECA IS NOT NULL
GROUP BY PECA, MES_ANO
ORDER BY MES_ANO;



-- Verificando as localidades dos clientes
SELECT BAIRRO, COUNT(BAIRRO) AS TOTAL_BAIRRO FROM RELATORIO
GROUP BY BAIRRO;


-- Corrigindo nome Jabaquarau
UPDATE CLIENTE SET BAIRRO = 'JABAQUARA'
WHERE BAIRRO = 'JABAQUARAU';



-- Verificando a quantidade de dias para entregar o serviço finalizado
SELECT IDCONSERTO, MECANICO, DATA_CHEGADA, DATA_SAIDA, DATA_SAIDA - DATA_CHEGADA AS DIAS FROM RELATORIO
WHERE MECANICO IS NOT NULL 
ORDER BY MECANICO;


-- Corrigindo datas invertidas
UPDATE SERVICO SET DATA_CHEGADA = '2022-05-05'
WHERE IDCONSERTO = 28;

UPDATE SERVICO SET DATA_SAIDA = '2022-07-05'
WHERE IDCONSERTO = 28;

UPDATE SERVICO SET DATA_CHEGADA = '2022-02-14'
WHERE IDCONSERTO = 17;

UPDATE SERVICO SET DATA_SAIDA = '2022-02-16'
WHERE IDCONSERTO = 17;

UPDATE SERVICO SET DATA_CHEGADA = '2022-11-05'
WHERE IDCONSERTO = 2;

UPDATE SERVICO SET DATA_SAIDA = '2022-12-04'
WHERE IDCONSERTO = 2;


-- Criando View para relatório com números
CREATE VIEW RELATORIO_FINAL AS
SELECT IDCLIENTE, NOME, SEXO, BAIRRO, MARCA, PECA, QUANTIDADE, VALOR, 
       SUM(QUANTIDADE) * VALOR  AS TOTAL, DATA_CHEGADA, 
       DATA_SAIDA, DATA_SAIDA - DATA_CHEGADA AS DIAS, MECANICO
       FROM RELATORIO
GROUP BY IDCONSERTO
ORDER BY NOME;

SELECT * FROM RELATORIO_FINAL;



-- Análise de MIN, MAX, MÉDIA E TOTAL por cliente.
SELECT NOME,  MIN(TOTAL) AS MIN, 
              MAX(TOTAL) AS MAX, 
              ROUND(AVG(TOTAL), 2) AS MEDIA, 
              SUM(TOTAL) AS TOTAL_VALOR 
FROM RELATORIO_FINAL
WHERE TOTAL IS NOT NULL
GROUP BY IDCLIENTE
ORDER BY NOME;


-- Análise de entrega de serviço por mecânico
SELECT MECANICO, COUNT(NOME) AS TOTAL_SERVICO, 
       MIN(DIAS) AS MIN_DIA, 
       MAX(DIAS) AS MAX_DIA, 
       ROUND(AVG(DIAS), 2) AS MEDIA_DIA
FROM RELATORIO_FINAL
WHERE MECANICO IS NOT NULL
GROUP BY MECANICO
ORDER BY MEDIA_DIA;


-- Total de gasto por genero
SELECT SEXO, SUM(TOTAL) AS TOTAL FROM RELATORIO_FINAL
GROUP BY SEXO;


-- Total de conserto por marca
SELECT MARCA, COUNT(PECA) AS QNTD_PECAS, SUM(TOTAL) AS TOTAL FROM RELATORIO_FINAL
GROUP BY MARCA
ORDER BY TOTAL DESC;


-- Total de conserto por cliente
SELECT NOME, COUNT(IDCLIENTE) AS QNTD_CONSERTOS, SUM(TOTAL) AS TOTAL FROM RELATORIO_FINAL
WHERE TOTAL IS NOT NULL
GROUP BY IDCLIENTE
ORDER BY QNTD_CONSERTOS DESC;



-- Verificando condições OR e AND
SELECT * FROM RELATORIO_FINAL
WHERE MARCA = 'TOYOTA' AND (BAIRRO = 'JABAQUARA' OR BAIRRO = 'SANTO AMARO');



-- Analisando clientes que compraram entre $500 a $1000
SELECT * FROM RELATORIO_FINAL
WHERE TOTAL BETWEEN 500 AND 1500;



-- Analisando clientes quem tem o carro da marca fiat
SELECT * FROM RELATORIO_FINAL
WHERE MARCA LIKE '%FIAT%';


